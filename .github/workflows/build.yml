cat > .github/workflows/build.yml << 'EOF'
name: Build Android APK

on:
  push:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ALL required system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          python3-dev \
          openjdk-11-jdk \
          git \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          wget \
          curl \
          unzip \
          sudo \
          build-essential
          
    - name: Install ALL Python dependencies
      run: |
        pip3 install buildozer cython python-for-android
        
    - name: Build with MAXIMUM logging
      run: |
        cd cliui/platforms/fdroid
        
        # Set maximum log level
        export BUILDOZER_LOG_LEVEL=2
        
        echo "=== Starting Build with Maximum Logging ==="
        buildozer -v android debug 2>&1 | tee full_build.log
        
        # If build fails, show the ACTUAL error
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "=== BUILD FAILED - SHOWING ACTUAL ERROR ==="
          echo "=== LAST 100 LINES OF LOG ==="
          tail -100 full_build.log
          echo "=== SEARCHING FOR ERRORS ==="
          grep -A 5 -B 5 -i "error\|failed\|missing\|not found\|exception" full_build.log | head -50
          exit 1
        fi
        
    - name: Upload complete build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: complete-build-logs
        path: cliui/platforms/fdroid/full_build.log
        
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: smartcli-apk
        path: cliui/platforms/fdroid/bin/*.apk
EOF
